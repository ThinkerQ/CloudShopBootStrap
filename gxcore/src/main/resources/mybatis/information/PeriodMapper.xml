<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PeriodMapper">
	
	<!-- 新增-->
	<insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="period_ID">
		insert into T_period(periodNumber,	prizeUserId,needCount,productId,alreadyCount,prizeNumber,createTime,prizeTime,status)
		values (#{periodNumber},#{prizeUserId},	#{needCount},#{productId},#{alreadyCount},#{prizeNumber},#{createTime},	#{prizeTime},#{status})
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from T_period
		where 
			period_ID = #{period_ID}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  T_period
			set 
				periodNumber = #{periodNumber}	,	
				needCount = #{needCount}	,	
				productId = #{productId}	,	
			where
				period_ID = #{period_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			periodNumber,prizeUserId,needCount,productId,alreadyCount,prizeNumber,date_format(a.createTime, '%Y-%m-%d') AS "createTime",prizeTime,status,period_ID
		from 
			T_period
		where 
			period_ID = #{period_ID}
	</select>
	
	<select id="queryPeriodById" parameterType="pd" resultType="pd">
		select 
			a.period_ID,a.periodNumber,a.needCount,a.alreadyCount,a.status,b.product_ID,b.firstName,b.secondName,b.littleImgUrl,b.bigImgUrl
		from 
			T_period a LEFT JOIN product b ON b.product_ID=a.productId 
		where 
			period_ID = #{period_ID}
	</select>

    <sql id="selectSql">
        a.period_ID,
		a.periodNumber,
		a.prizeUserId,
		a.needCount,
		a.alreadyCount,
		a.prizeNumber,
		date_format(a.createTime, '%Y-%m-%d') AS "createTime",
		date_format(a.prizeTime, '%Y-%m-%d') AS "prizeTime",
		a.status,
		a.productId,
		p.firstName,
		p.littleImgUrl
	</sql>

    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
		select
        	<include refid="selectSql"/>
		from
				T_period a LEFT JOIN product p ON p.product_ID=a.productId
		<where>
			<if test="pd.beginDate != null and pd.beginDate != ''">
				AND a.createTime &gt;= #{pd.beginDate}
			</if>
			<if test="pd.endDate != null and pd.endDate != ''">
				AND a.createTime &lt;= #{pd.endDate}
			</if>
			<if test="pd.status != null and pd.status != ''">
				AND a.status = #{pd.status}
			</if>
			<if test="pd.keyword != null and pd.keyword != ''">
				AND a.periodNumber LIKE CONCAT('%', #{pd.keyword},'%')
			</if>
		</where>
	</select>
	
	<sql id="selectSqlPeriod">
		period_ID,periodNumber,prizeUserId,needCount,productId,alreadyCount,prizeNumber,createTime,prizeTime,status
	</sql>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
        <include refid="selectSql"/>
		from
				T_period a LEFT JOIN product p ON p.product_ID=a.productId
	</select>
	
	<!-- 列表(通过商品id查询历史期数) -->
	<select id="queryPeriodsByProductId" parameterType="pd" resultType="pd">
		select
        <include refid="selectSqlPeriod"/>
		from
				T_period 
		where 
			productId = #{productId}
	</select>
	
	<!-- 列表（排序） by GENGSHUQIANG-->
	<select id="listByOrder" parameterType="pd" resultType="pd">
		select
        <include refid="selectSql"/>
		from T_period a LEFT JOIN product p ON p.product_ID=a.productId
		<!-- 最热 -->
		<if test="keyword=='hostEst'">
	    	order by a.alreadyCount DESC
	    </if>
		<!-- 最快 -->
		<if test="keyword=='fastEst'">
	    	order by (a.alreadyCount/a.needCount) DESC
	    </if>
		<!-- 最新 -->
		<if test="keyword=='newEst'">
	    	order by a.createTime DESC
	    </if>
		<!-- 高价 -->
		<if test="keyword=='hightPriceEst'">
	    	order by a.needCount DESC
	    </if>
		<!-- 低价 -->
		<if test="keyword=='lowPriceEst'">
	    	order by a.needCount ASC
	    </if>
	     
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from T_period
		where 
			period_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>